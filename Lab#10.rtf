{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\froman\fcharset0 Times-Italic;
\f3\froman\fcharset0 Times-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red0\green0\blue192;\red63\green127\blue95;
\red42\green0\blue255;\red106\green62\blue62;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c0\c0\c75294;\csgenericrgb\c24706\c49804\c37255;
\csgenericrgb\c16471\c0\c100000;\csgenericrgb\c41569\c24314\c24314;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf2 Lab#10 Pseudocode\
Distance Traveled\
Import Scanner\
Declare Class\
Declare 3 Variables; speed, hoursTraveled, distance\
Create Distance traveled constructor\
Create the scanner and distance traveled objects\
Use a do while loop to validate a positive input\
Use the same do while loop to guarantee an input greater than 0\
Input: Hours traveled\
If number is less than or equal to 0 show: Please enter a number greater than 0\
Prepares table to be printed\
Show: Hour/time distance traveled\
\
Hotel\
Import Scanner\
Declare class\
Declare 6 variables\
Declare 3 doubles\
Create scanner object\
Input validation for floors\
Input: How many floors the hotel has\
If number is negative show: Please enter a positive number\
Input validation for rooms\
Input: How many rooms each floor has\
If number is less than 10 show: Please enter a number greater than 10\
Calculate total rooms: floors*rooms\
Begin loop to find remaining data points\
Input: How many rooms are occupied on floor 1\
Calculate total occupancy: Total occupancy+occupancy; i++\
Calculate rooms vacant: total rooms - total occupancy\
Calculate Occupancy rate: total occupancy/total rooms\
Return the calculated information\
Show: Total rooms\
Show: Rooms occupied\
Show: Rooms vacant\
Show: Occupancy Rate\
\
/*\
Created for Intro Java on 12/5\
@author Chris-Finnegan, Kevin Gary\
*/\
\
package
\f1\b0 \cf0  lab10;\

\f0\b \cf2 import
\f1\b0 \cf0  java.util.Scanner;\
\

\f0\b \cf2 public
\f1\b0 \cf0  
\f0\b \cf2 class
\f1\b0 \cf0  DistanceTraveled \{\
\
	
\f0\b \cf2 private
\f1\b0 \cf0  
\f0\b \cf2 static
\f1\b0 \cf0  
\f0\b \cf2 int
\f1\b0 \cf0  
\f2\i \cf3 speed
\f1\i0 \cf0 ;\
	
\f0\b \cf2 private
\f1\b0 \cf0  
\f0\b \cf2 static
\f1\b0 \cf0  
\f0\b \cf2 int
\f1\b0 \cf0  
\f2\i \cf3 hoursTraveled
\f1\i0 \cf0 ;\
	
\f0\b \cf2 private
\f1\b0 \cf0  
\f0\b \cf2 static
\f1\b0 \cf0  
\f0\b \cf2 int
\f1\b0 \cf0  
\f2\i \cf3 distance
\f1\i0 \cf0 ;\
	\
	\cf4 // Distance traveled constructor \cf0 \
	
\f0\b \cf2 public
\f1\b0 \cf0  DistanceTraveled() \{\
		
\f2\i \cf3 speed
\f1\i0 \cf0  = 0;\
		
\f2\i \cf3 hoursTraveled
\f1\i0 \cf0  = 0;\
	\}\
\
	
\f0\b \cf2 public
\f1\b0 \cf0  
\f0\b \cf2 void
\f1\b0 \cf0  getDistance() \{\
		
\f2\i \cf3 distance
\f1\i0 \cf0  = 
\f2\i \cf3 speed
\f1\i0 \cf0 *
\f2\i \cf3 hoursTraveled
\f1\i0 \cf0 ;\
		System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(
\f2\i \cf3 distance
\f1\i0 \cf0  + \cf5 "miles have been traveled"\cf0 );\
		\
	\}\
	\
	
\f0\b \cf2 public
\f1\b0 \cf0  
\f0\b \cf2 static
\f1\b0 \cf0  
\f0\b \cf2 void
\f1\b0 \cf0  main(String[] \cf6 args\cf0 ) \{\
		\
		\cf4 // Creation of the scanner and distance traveled objects\cf0 \
		Scanner \cf6 \ul \ulc6 in\cf0 \ulnone  = 
\f0\b \cf2 new
\f1\b0 \cf0  Scanner(System.
\f3\i\b \cf3 in
\f1\i0\b0 \cf0 );\
		DistanceTraveled \cf6 \ul \ulc6 test\cf0 \ulnone  = 
\f0\b \cf2 new
\f1\b0 \cf0  DistanceTraveled();\
		\
		\cf4 // Uses a do while loop to validate a positive input\cf0 \
		\
		
\f0\b \cf2 do
\f1\b0 \cf0  \{\
		System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Please enter your speed(mph):"\cf0 );\
		
\f0\b \cf2 while
\f1\b0 \cf0  (!\cf6 in\cf0 .hasNextInt()) \{\
			System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Please enter a positive number!"\cf0 );\
			\cf6 in\cf0 .next();\
		\}\
		
\f2\i \cf3 speed
\f1\i0 \cf0  = \cf6 in\cf0 .nextInt();\
		\} 
\f0\b \cf2 while
\f1\b0 \cf0  (
\f2\i \cf3 speed
\f1\i0 \cf0  <=0);\
\
		\cf4 // Uses the same do while loop to guarantee an input greater than 0\cf0 \
		
\f0\b \cf2 do
\f1\b0 \cf0  \{\
			System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Please enter your hours traveled:"\cf0 );\
			
\f0\b \cf2 while
\f1\b0 \cf0  (!\cf6 in\cf0 .hasNextInt()) \{\
				System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Please enter a value greater than 0!"\cf0 );\
				\cf6 in\cf0 .next();\
			\}\
			
\f2\i \cf3 hoursTraveled
\f1\i0 \cf0  = \cf6 in\cf0 .nextInt();\
			\} 
\f0\b \cf2 while
\f1\b0 \cf0  (
\f2\i \cf3 hoursTraveled
\f1\i0 \cf0  <0);\
		\
		\cf4 //Prepares the table to be printed\cf0 \
		System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Hour \\t Distance Traveled"\cf0 );\
		System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "~~~~~~~~~~~~~~~~~~~~~~~~~~"\cf0 );\
		
\f0\b \cf2 int
\f1\b0 \cf0  \cf6 hoursPrinted\cf0  = 0;\
		
\f0\b \cf2 while
\f1\b0 \cf0 (
\f2\i \cf3 hoursTraveled
\f1\i0 \cf0  > \cf6 hoursPrinted\cf0 )\
		\{\
			\cf6 hoursPrinted\cf0 ++;\
			
\f2\i \cf3 distance
\f1\i0 \cf0  = \cf6 hoursPrinted\cf0  * 
\f2\i \cf3 speed
\f1\i0 \cf0 ;\
			System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf6 hoursPrinted\cf0  + \cf5 "\\t"\cf0  + 
\f2\i \cf3 distance
\f1\i0 \cf0  );\
		\}\
		\
	\}\
\
\}\
\

\f0\b \cf2 package
\f1\b0 \cf0  lab10;\

\f0\b \cf2 import
\f1\b0 \cf0  java.util.Scanner;\
\

\f0\b \cf2 public
\f1\b0 \cf0  
\f0\b \cf2 class
\f1\b0 \cf0  Hotel \{\
\
	
\f0\b \cf2 public
\f1\b0 \cf0  
\f0\b \cf2 static
\f1\b0 \cf0  
\f0\b \cf2 void
\f1\b0 \cf0  main(String[] \cf6 args\cf0 ) \{\
		\cf4 // Declares \ul nevessary\ulnone  variables\cf0 \
		
\f0\b \cf2 int
\f1\b0 \cf0  \cf6 floors\cf0 , \cf6 rooms\cf0 , \cf6 totalRooms\cf0 , \cf6 occupancy\cf0 , \cf6 totalOccupancy\cf0 , \cf6 roomsVacant\cf0 ;\
		
\f0\b \cf2 double
\f1\b0 \cf0  \cf6 occupancyRate\cf0 , \cf6 x\cf0 , \cf6 y\cf0 ;\
		\cf4 // Creates the scanner object\cf0 \
		Scanner \cf6 \ul \ulc6 in\cf0 \ulnone  = 
\f0\b \cf2 new
\f1\b0 \cf0  Scanner(System.
\f3\i\b \cf3 in
\f1\i0\b0 \cf0 );\
	\
		\cf4 // Input validation for floors\cf0 \
		
\f0\b \cf2 do
\f1\b0 \cf0  \{\
			System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "How many floors does the hotel have? :"\cf0 );\
			
\f0\b \cf2 while
\f1\b0 \cf0  (!\cf6 in\cf0 .hasNextInt()) \{\
				System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Please enter a positive number!"\cf0 );\
				\cf6 in\cf0 .next();\
			\}\
			\cf6 floors\cf0  = \cf6 in\cf0 .nextInt();\
			\} 
\f0\b \cf2 while
\f1\b0 \cf0  (\cf6 floors\cf0  <=1);\
		\
		\cf4 // Input validation for rooms\cf0 \
		
\f0\b \cf2 do
\f1\b0 \cf0  \{\
			System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "How many rooms does each floor have? :"\cf0 );\
			
\f0\b \cf2 while
\f1\b0 \cf0  (!\cf6 in\cf0 .hasNextInt()) \{\
				System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Please enter a number greater than 10!"\cf0 );\
				\cf6 in\cf0 .next();\
			\}\
			\cf6 rooms\cf0  = \cf6 in\cf0 .nextInt();\
			\} 
\f0\b \cf2 while
\f1\b0 \cf0  (\cf6 rooms\cf0  <= 9);\
		\
		\cf4 // Calculates necessary data\cf0 \
		\cf6 totalRooms\cf0  = \cf6 floors\cf0  * \cf6 rooms\cf0 ;\
		\cf6 totalOccupancy\cf0  = 0;\
		\
		\cf4 // Begins loop to find remaining data points\cf0 \
		
\f0\b \cf2 int
\f1\b0 \cf0  \cf6 i\cf0  =1;\
		
\f0\b \cf2 while
\f1\b0 \cf0 (\cf6 i\cf0  <= \cf6 floors\cf0 ) \{\
			System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "How many rooms are occcupied on floor "\cf0  + \cf6 i\cf0 \
					+ \cf5 "?"\cf0 );\
			\cf6 occupancy\cf0  = \cf6 in\cf0 .nextInt();\
			\cf6 totalOccupancy\cf0  = \cf6 totalOccupancy\cf0  + \cf6 occupancy\cf0 ;\
			\cf6 i\cf0 ++;\
		\}\
		\cf4 // Calculates remaining data\cf0 \
		\cf6 roomsVacant\cf0  = \cf6 totalRooms\cf0  - \cf6 totalOccupancy\cf0 ;\
		\cf6 x\cf0  = \cf6 totalOccupancy\cf0 ; \cf6 y\cf0  = \cf6 totalRooms\cf0 ;\
		\cf6 occupancyRate\cf0  = \cf6 x\cf0  / \cf6 y\cf0 ;\
		\cf4 // Returns the calculated information\cf0 \
		System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Total Rooms: "\cf0  + \cf6 totalRooms\cf0 ); \
		System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Rooms Occupied: "\cf0  + \cf6 totalOccupancy\cf0 );\
		System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Rooms Vacant: "\cf0  + \cf6 roomsVacant\cf0 );\
		System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(\cf5 "Occupancy rate: "\cf0  + \cf6 occupancyRate\cf0  );\
		\}\
		\
	\}\
\
\
}